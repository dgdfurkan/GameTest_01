name: Update Game Projects

on:
  push:
    branches:
      - main

jobs:
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      final_repos: ${{ steps.filter-repos.outputs.final_repos }}
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "frkngndz60@gmail.com"
          git config --global user.name "dgdfurkan"
      
      - name: Check for repositories with GunduzTech directory
        id: filter-repos
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Fetching repository list..."
          REPO_LIST=$(curl -s -H "Authorization: token ${GH_PAT}" "https://api.github.com/user/repos?per_page=100&affiliation=owner" | jq -r '.[] | select(.default_branch == "main") | .name')
          
          FINAL_REPOS=()
          for repo in $REPO_LIST; do
            echo "Checking $repo for GunduzTech directory..."
            
            # Use GitHub API to check if the GunduzTech directory exists without cloning
            DIR_CHECK=$(curl -s -H "Authorization: token ${GH_PAT}" "https://api.github.com/repos/dgdfurkan/$repo/contents/GunduzTech")
            
            if [[ "$DIR_CHECK" != *"Not Found"* && "$DIR_CHECK" != *"404"* ]]; then
              FINAL_REPOS+=("$repo")
              echo "$repo uses GunduzTech."
            else
              echo "Skipping $repo, no GunduzTech found."
            fi
          done
          
          echo "FINAL_REPOS=${FINAL_REPOS[*]}" >> $GITHUB_ENV
          echo "final_repos=$(IFS=, ; echo "${FINAL_REPOS[*]}")" >> $GITHUB_OUTPUT

  update-repos:
    needs: get-repos
    strategy:
      matrix:
        repo-index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "frkngndz60@gmail.com"
          git config --global user.name "dgdfurkan"
      
      - name: Update GunduzTech-based project
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          IFS=',' read -r -a REPO_ARRAY <<< "${{ needs.get-repos.outputs.final_repos }}"
          repo=${REPO_ARRAY[${{ matrix.repo-index }}]}
          
          if [[ -n "$repo" && "$repo" != " " ]]; then
            echo "Updating $repo..."
            git clone https://${{ secrets.GH_PAT }}@github.com/dgdfurkan/$repo.git
            cd $repo
            
            if [ -d "GunduzTech" ]; then
              git checkout main
              git pull origin main
              
              if ! git ls-tree -d HEAD GunduzTech >/dev/null 2>&1; then
                git subtree add --prefix=GunduzTech https://${{ secrets.GH_PAT }}@github.com/dgdfurkan/GunduzTech.git main --squash
              else
                git subtree pull --prefix=GunduzTech https://${{ secrets.GH_PAT }}@github.com/dgdfurkan/GunduzTech.git main --squash
              fi
              
              git add .
              git commit -m "Auto-update GunduzTech" || echo "No changes to commit"
              git push origin main
            fi
            
            cd ..
          fi
